# Pipeline for Binding Tools for Swift.
#
# yaml help: https://aka.ms/yaml

trigger:
- '*'

jobs:
- job: ContinuousIntegration
  timeoutInMinutes: 720 # 12 hours (but 6 is max on hosted agents)
  pool:
    vmImage: 'macOS-10.14'

  steps:
  - script: |
      set +e # we don't care about errors here
      set -x
      pwd
      env | sort
      ls -la /Applications
      system_profiler SPHardwareDataType
      curl -s https://support-sp.apple.com/sp/product?cc=$(system_profiler SPHardwareDataType | awk '/Serial/ {print $4}' | cut -c 9-) | sed 's|.*<configCode>\(.*\)</configCode>.*|\1|'
      sysctl -a | grep cpu
      exit 0 # make sure we don't return an error code if the last command failed
    displayName: 'Environment info'

  - script: |
      set -e
      set -x
      ./jenkins/provision-deps.sh
    displayName: 'Provision dependencies'

  - script: |
      set -e
      set -x
      ./jenkins/build-swift.sh --publish
      if test -f Pack-Man/SwiftToolchain-*.zip; then
        echo "##vso[task.setvariable variable=upload_toolchain]1"
      else
        echo "##vso[task.setvariable variable=upload_toolchain]0"
      fi
    displayName: 'Build Swift'

  - task: AzureFileCopy@3
    condition: eq('1', variables.UPLOAD_TOOLCHAIN)
    displayName: 'Upload toolchain to Azure'
    inputs:
      SourcePath: 'Pack-Man/SwiftToolchain-*.zip'
      azureSubscription: 'BOSStorageMirror'
      Destination: 'AzureBlob'
      storage: 'bosstoragemirror'
      ContainerName: 'wrench'
      BlobPrefix: 'binding-tools-for-swift/toolchain'

  - script: |
      set -e
      set -x
      ./jenkins/build.sh
    displayName: 'Build'

  - script: |
      set -e
      set -x
      ./jenkins/build-package.sh
      ls -la ../package || true
    displayName: 'Package'

  - task: PublishBuildArtifacts@1
    inputs:
      PathtoPublish: '../package'
      ArtifactName: 'drop'
      publishLocation: 'Container'

  - script: |
      set -e
      set -x
      ./jenkins/run-tests.sh
    displayName: 'Run tests'
